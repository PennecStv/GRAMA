/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package grama.map;

import grama.Graph;
import grama.interfaces.ecranListener;
import java.awt.CardLayout;
import java.awt.Font;
import java.io.File;
import java.io.IOException;
import java.util.Collections;
import java.util.Comparator;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JComboBox;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;




/**
 * Cette classe représente l'interface graphique de l'application GRAMA, elle fait office de fenêtre principale.
 * @author Steve Pennec
 * @version 1.0
 */
public class EcranPrincipal extends javax.swing.JFrame implements ecranListener{
    
    /* === Attributs === */
    /**
     * Cet attribut contiendra le graphe et qui fournira les résultats demandés par les fonctionnalités de l'application
     */
    private Graph grama;
    
    
    /**
     * Il contiendra le chemin absolu du fichier utilisé
     */
    private String fichier = "Graphe.csv";
    
    
    
    
    
    /* === Constructeur === */
    /**
     * Crée la fenêtre principale de l'application
     */
    public EcranPrincipal() throws IOException {
        initComponents();
        
        grama = new Graph();
        initGraph();
        setLocationRelativeTo(null);
        
        ImageIcon img = new ImageIcon("icon/GRAMA icon.png");
        setIconImage(img.getImage());
    }

    
    
    /* === Méthodes d'initialisation === */
    /**
     * Initialise et crée le graphe du fichier entré.
     * @throws IOException 
     */
    private void initGraph() throws IOException{
        //if (fichier != null){
            String fichierGraphe = grama.ouvrirGraphe(fichier);
            grama.creationListe(fichierGraphe);
            grama.creationListeTypee();
            
            initMap();
        //}
            
    }
    
    /**
     * Initialise le panel de la carte et récupére le graphe pour le dessiner.
     */
    private void initMap(){
        mapGraphe.generateGraphNoeud(grama.getListeNoeud());
        mapGraphe.generateGraphLien(grama.getListeLien());
    }
    
    
    
    
    /* === Code généré via la fenêtre Design === */
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        ListeFrame = new javax.swing.JFrame();
        listePanel = new javax.swing.JPanel();
        titreListePanel = new javax.swing.JLabel();
        titreListeNoeud = new javax.swing.JLabel();
        titreListeLien = new javax.swing.JLabel();
        villesRadioBouton = new javax.swing.JRadioButton();
        resRadioBouton = new javax.swing.JRadioButton();
        loisirRadioBouton = new javax.swing.JRadioButton();
        depRadioBouton = new javax.swing.JRadioButton();
        natioRadioBouton = new javax.swing.JRadioButton();
        autoroutesRadioBouton = new javax.swing.JRadioButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        noeudsTextArea = new javax.swing.JTextArea();
        jScrollPane3 = new javax.swing.JScrollPane();
        liensTextArea = new javax.swing.JTextArea();
        jSeparator3 = new javax.swing.JSeparator();
        exitFrameBouton = new javax.swing.JButton();
        noeudButtonGroup = new javax.swing.ButtonGroup();
        lienButtonGroup = new javax.swing.ButtonGroup();
        openFileChooser = new javax.swing.JFileChooser();
        aProposOptionPane = new javax.swing.JOptionPane();
        aideOptionPane = new javax.swing.JOptionPane();
        rechercheOptionPane = new javax.swing.JOptionPane();
        menuPanel = new javax.swing.JPanel();
        principalPanel = new javax.swing.JPanel();
        ecran0Bouton = new javax.swing.JButton();
        ecran1Bouton = new javax.swing.JButton();
        ecran2Bouton = new javax.swing.JButton();
        ecran3Bouton = new javax.swing.JButton();
        ecran4Bouton = new javax.swing.JButton();
        titreEcranPrincipal = new javax.swing.JLabel();
        comingSoonLabel = new javax.swing.JLabel();
        ecran0Panel = new javax.swing.JPanel();
        retour0Bouton = new javax.swing.JButton();
        villesCheckBox = new javax.swing.JCheckBox();
        restoCheckBox = new javax.swing.JCheckBox();
        loisirCheckBox = new javax.swing.JCheckBox();
        autoroutesCheckBox = new javax.swing.JCheckBox();
        natioCheckBox = new javax.swing.JCheckBox();
        depCheckBox = new javax.swing.JCheckBox();
        titreNoeudEcran0 = new javax.swing.JLabel();
        titreLienEcran0 = new javax.swing.JLabel();
        listerBouton = new javax.swing.JButton();
        titreNombreEcran0 = new javax.swing.JLabel();
        nombreComboBox = new javax.swing.JComboBox<>();
        infoNombreEcran0 = new javax.swing.JLabel();
        titreEcran0 = new javax.swing.JLabel();
        nombreEcran0 = new javax.swing.JLabel();
        ecran1Panel = new javax.swing.JPanel();
        retour1Bouton = new javax.swing.JButton();
        titre1Distance = new javax.swing.JLabel();
        titreNoeudSelectedLabel = new javax.swing.JLabel();
        titreLienSelectedLabel = new javax.swing.JLabel();
        typeNoeudComboBox = new javax.swing.JComboBox<>();
        noeudSelectedLabel = new javax.swing.JLabel();
        lienSelectedLabel = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        voisinsTextArea = new javax.swing.JTextArea();
        titreTypeNoeudLabel = new javax.swing.JLabel();
        titreDepartLienSelectedLabel = new javax.swing.JLabel();
        titreArriveeLienSelectedLabel = new javax.swing.JLabel();
        departLienSelectedLabel = new javax.swing.JLabel();
        arriveeLienSelectedLabel = new javax.swing.JLabel();
        ecran2Panel = new javax.swing.JPanel();
        retour2Bouton = new javax.swing.JButton();
        titre2Distance = new javax.swing.JLabel();
        titrePremierNoeudSelectedLabel1 = new javax.swing.JLabel();
        premierNoeudSelectedLabel1 = new javax.swing.JLabel();
        selectPremierNoeudBouton1 = new javax.swing.JButton();
        titreDeuxiemeNoeudSelectedLabel = new javax.swing.JLabel();
        deuxiemeNoeudSelectedLabel1 = new javax.swing.JLabel();
        selectDeuxiemeNoeudBouton1 = new javax.swing.JButton();
        titreResultatLabel = new javax.swing.JLabel();
        resultatLabel = new javax.swing.JLabel();
        ecran3Panel = new javax.swing.JPanel();
        retour3Bouton = new javax.swing.JButton();
        selectDeuxiemeNoeudBouton2 = new javax.swing.JButton();
        deuxiemeNoeudSelectedLabel2 = new javax.swing.JLabel();
        titreDeuxiemeNoeudSelectedLabel2 = new javax.swing.JLabel();
        selectPremierNoeudBouton2 = new javax.swing.JButton();
        titrePremierNoeudSelectedLabel2 = new javax.swing.JLabel();
        premierNoeudSelectedLabel2 = new javax.swing.JLabel();
        titrePlus2Distance = new javax.swing.JLabel();
        titreOuvertLabel = new javax.swing.JLabel();
        titreGastroLabel = new javax.swing.JLabel();
        titreCulturelLabel = new javax.swing.JLabel();
        resultatOuvertLabel = new javax.swing.JLabel();
        resultatGastroLabel = new javax.swing.JLabel();
        resultatCulturelLabel = new javax.swing.JLabel();
        ecran4Panel = new javax.swing.JPanel();
        retour4Bouton = new javax.swing.JButton();
        mapPanel = new javax.swing.JPanel();
        mapGraphe = new grama.map.Map();
        consolePanel = new javax.swing.JPanel();
        consoleLabel = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        consoleTextArea = new javax.swing.JTextArea();
        menuBar = new javax.swing.JMenuBar();
        fichierMenu = new javax.swing.JMenu();
        ouvrirMenuItem = new javax.swing.JMenuItem();
        renitialiserMenuItem = new javax.swing.JMenuItem();
        jSeparator1 = new javax.swing.JPopupMenu.Separator();
        quitterMenuItem = new javax.swing.JMenuItem();
        affichageMenu = new javax.swing.JMenu();
        afficherMenuPanelCheckBox = new javax.swing.JCheckBoxMenuItem();
        afficherConsoleCheckBox = new javax.swing.JCheckBoxMenuItem();
        rechercheMenu = new javax.swing.JMenu();
        rechercheNoeudMenuItem = new javax.swing.JMenuItem();
        jSeparator4 = new javax.swing.JPopupMenu.Separator();
        rechercheLienMenuItem = new javax.swing.JMenuItem();
        aideMenu = new javax.swing.JMenu();
        aideMenuItem = new javax.swing.JMenuItem();
        jSeparator2 = new javax.swing.JPopupMenu.Separator();
        AProposMenuItem = new javax.swing.JMenuItem();

        ListeFrame.setTitle("Liste des éléments du Graphe");
        ListeFrame.setResizable(false);

        titreListePanel.setFont(new java.awt.Font("Segoe UI Light", 1, 24)); // NOI18N
        titreListePanel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        titreListePanel.setText("Liste des éléments du Graph Map Analysis");

        titreListeNoeud.setFont(new java.awt.Font("Segoe UI Light", 0, 24)); // NOI18N
        titreListeNoeud.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        titreListeNoeud.setText("NOEUDS");

        titreListeLien.setFont(new java.awt.Font("Segoe UI Light", 0, 24)); // NOI18N
        titreListeLien.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        titreListeLien.setText("LIENS");

        villesRadioBouton.setFont(new java.awt.Font("Segoe UI Light", 1, 14)); // NOI18N
        villesRadioBouton.setText("Villes");
        villesRadioBouton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                villesRadioBoutonActionPerformed(evt);
            }
        });

        resRadioBouton.setFont(new java.awt.Font("Segoe UI Light", 1, 14)); // NOI18N
        resRadioBouton.setText("Restaurants");
        resRadioBouton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                resRadioBoutonActionPerformed(evt);
            }
        });

        loisirRadioBouton.setFont(new java.awt.Font("Segoe UI Light", 1, 14)); // NOI18N
        loisirRadioBouton.setText("Centres de loisir");
        loisirRadioBouton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                loisirRadioBoutonActionPerformed(evt);
            }
        });

        depRadioBouton.setFont(new java.awt.Font("Segoe UI Light", 1, 14)); // NOI18N
        depRadioBouton.setText("Routes départementales");
        depRadioBouton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                depRadioBoutonActionPerformed(evt);
            }
        });

        natioRadioBouton.setFont(new java.awt.Font("Segoe UI Light", 1, 14)); // NOI18N
        natioRadioBouton.setText("Routes nationales");
        natioRadioBouton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                natioRadioBoutonActionPerformed(evt);
            }
        });

        autoroutesRadioBouton.setFont(new java.awt.Font("Segoe UI Light", 1, 14)); // NOI18N
        autoroutesRadioBouton.setText("Autoroutes");
        autoroutesRadioBouton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                autoroutesRadioBoutonActionPerformed(evt);
            }
        });

        jScrollPane2.setPreferredSize(new java.awt.Dimension(600, 103));

        noeudsTextArea.setEditable(false);
        noeudsTextArea.setColumns(20);
        noeudsTextArea.setFont(new java.awt.Font("Segoe UI Historic", 0, 16)); // NOI18N
        noeudsTextArea.setRows(5);
        noeudsTextArea.setMinimumSize(new java.awt.Dimension(500, 500));
        jScrollPane2.setViewportView(noeudsTextArea);

        jScrollPane3.setPreferredSize(new java.awt.Dimension(600, 103));
        jScrollPane3.setWheelScrollingEnabled(false);

        liensTextArea.setEditable(false);
        liensTextArea.setColumns(20);
        liensTextArea.setFont(new java.awt.Font("Segoe UI Historic", 0, 14)); // NOI18N
        liensTextArea.setRows(5);
        liensTextArea.setMinimumSize(new java.awt.Dimension(500, 500));
        jScrollPane3.setViewportView(liensTextArea);

        jSeparator3.setOrientation(javax.swing.SwingConstants.VERTICAL);

        exitFrameBouton.setFont(new java.awt.Font("Segoe UI Light", 0, 18)); // NOI18N
        exitFrameBouton.setText("Quitter");
        exitFrameBouton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitFrameBoutonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout listePanelLayout = new javax.swing.GroupLayout(listePanel);
        listePanel.setLayout(listePanelLayout);
        listePanelLayout.setHorizontalGroup(
            listePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(listePanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(listePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(listePanelLayout.createSequentialGroup()
                        .addGroup(listePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(listePanelLayout.createSequentialGroup()
                                .addGap(40, 40, 40)
                                .addComponent(villesRadioBouton))
                            .addComponent(exitFrameBouton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(listePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(listePanelLayout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(resRadioBouton)
                                .addGap(78, 78, 78)
                                .addComponent(loisirRadioBouton)
                                .addGap(165, 165, 165)
                                .addComponent(autoroutesRadioBouton)
                                .addGap(18, 18, 18)
                                .addComponent(natioRadioBouton)
                                .addGap(18, 18, 18)
                                .addComponent(depRadioBouton))
                            .addComponent(titreListePanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(listePanelLayout.createSequentialGroup()
                                .addGap(83, 83, 83)
                                .addComponent(titreListeNoeud)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(titreListeLien, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(227, 227, 227)))
                        .addContainerGap())
                    .addGroup(listePanelLayout.createSequentialGroup()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 500, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 45, Short.MAX_VALUE)
                        .addComponent(jSeparator3, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(15, 15, 15)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 512, javax.swing.GroupLayout.PREFERRED_SIZE))))
        );
        listePanelLayout.setVerticalGroup(
            listePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(listePanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(listePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(listePanelLayout.createSequentialGroup()
                        .addComponent(titreListePanel)
                        .addGap(18, 18, 18)
                        .addGroup(listePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(titreListeNoeud)
                            .addComponent(titreListeLien)))
                    .addComponent(exitFrameBouton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(25, 25, 25)
                .addGroup(listePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(villesRadioBouton)
                    .addComponent(resRadioBouton)
                    .addComponent(loisirRadioBouton)
                    .addComponent(depRadioBouton)
                    .addComponent(natioRadioBouton)
                    .addComponent(autoroutesRadioBouton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(listePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jSeparator3, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 835, Short.MAX_VALUE)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        javax.swing.GroupLayout ListeFrameLayout = new javax.swing.GroupLayout(ListeFrame.getContentPane());
        ListeFrame.getContentPane().setLayout(ListeFrameLayout);
        ListeFrameLayout.setHorizontalGroup(
            ListeFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ListeFrameLayout.createSequentialGroup()
                .addComponent(listePanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        ListeFrameLayout.setVerticalGroup(
            ListeFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(listePanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        openFileChooser.setApproveButtonText("Ouvrir");
        openFileChooser.setDialogTitle("Ouvrir un graphe");
        openFileChooser.setSelectedFile(new java.io.File("C:\\Users\\Steve Pennec\\Desktop\\IUT Lyon - Travail\\GRAMA\\GRAMA Git\\sae-grama-project\\GRAMA\\Graphe.csv"));

        rechercheOptionPane.setFont(new java.awt.Font("Segoe UI Light", 0, 18)); // NOI18N

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Graph Map Analysis");

        menuPanel.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        menuPanel.setLayout(new java.awt.CardLayout());

        principalPanel.setBackground(new java.awt.Color(206, 206, 206));

        ecran0Bouton.setFont(new java.awt.Font("Segoe UI Light", 1, 18)); // NOI18N
        ecran0Bouton.setText("Filtre");
        ecran0Bouton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ecran0BoutonActionPerformed(evt);
            }
        });

        ecran1Bouton.setFont(new java.awt.Font("Segoe UI Light", 1, 18)); // NOI18N
        ecran1Bouton.setText("<html>Voisins et <br>extrémités<html>");
        ecran1Bouton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ecran1BoutonActionPerformed(evt);
            }
        });

        ecran2Bouton.setFont(new java.awt.Font("Segoe UI Light", 1, 18)); // NOI18N
        ecran2Bouton.setText("2 - Distance");
        ecran2Bouton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ecran2BoutonActionPerformed(evt);
            }
        });

        ecran3Bouton.setFont(new java.awt.Font("Segoe UI Light", 1, 18)); // NOI18N
        ecran3Bouton.setText("Comparaison");
        ecran3Bouton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ecran3BoutonActionPerformed(evt);
            }
        });

        ecran4Bouton.setFont(new java.awt.Font("Segoe UI Light", 1, 18)); // NOI18N
        ecran4Bouton.setText("Chemins");
        ecran4Bouton.setEnabled(false);
        ecran4Bouton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ecran4BoutonActionPerformed(evt);
            }
        });

        titreEcranPrincipal.setFont(new java.awt.Font("Eras Medium ITC", 1, 18)); // NOI18N
        titreEcranPrincipal.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        titreEcranPrincipal.setText("Graph Map Analysis");

        comingSoonLabel.setFont(new java.awt.Font("Segoe UI Light", 0, 14)); // NOI18N
        comingSoonLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        comingSoonLabel.setText("Coming Soon !");

        javax.swing.GroupLayout principalPanelLayout = new javax.swing.GroupLayout(principalPanel);
        principalPanel.setLayout(principalPanelLayout);
        principalPanelLayout.setHorizontalGroup(
            principalPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(principalPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(principalPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(titreEcranPrincipal, javax.swing.GroupLayout.DEFAULT_SIZE, 197, Short.MAX_VALUE)
                    .addComponent(ecran0Bouton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(ecran1Bouton)
                    .addComponent(ecran2Bouton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(ecran3Bouton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(ecran4Bouton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(comingSoonLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        principalPanelLayout.setVerticalGroup(
            principalPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(principalPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(titreEcranPrincipal)
                .addGap(51, 51, 51)
                .addComponent(ecran0Bouton, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(50, 50, 50)
                .addComponent(ecran1Bouton, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(50, 50, 50)
                .addComponent(ecran2Bouton, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(50, 50, 50)
                .addComponent(ecran3Bouton, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(27, 27, 27)
                .addComponent(comingSoonLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(ecran4Bouton, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(50, Short.MAX_VALUE))
        );

        menuPanel.add(principalPanel, "cardPrincipal");

        ecran0Panel.setPreferredSize(new java.awt.Dimension(195, 976));

        retour0Bouton.setFont(new java.awt.Font("Segoe UI Light", 1, 18)); // NOI18N
        retour0Bouton.setText("Retour");
        retour0Bouton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                retour0BoutonActionPerformed(evt);
            }
        });

        villesCheckBox.setFont(new java.awt.Font("Segoe UI Light", 1, 14)); // NOI18N
        villesCheckBox.setText("Villes");
        villesCheckBox.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        villesCheckBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                villesCheckBoxActionPerformed(evt);
            }
        });

        restoCheckBox.setFont(new java.awt.Font("Segoe UI Light", 1, 14)); // NOI18N
        restoCheckBox.setText("Restaurants");
        restoCheckBox.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        restoCheckBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                restoCheckBoxActionPerformed(evt);
            }
        });

        loisirCheckBox.setFont(new java.awt.Font("Segoe UI Light", 1, 14)); // NOI18N
        loisirCheckBox.setText("Centres de loisir");
        loisirCheckBox.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        loisirCheckBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                loisirCheckBoxActionPerformed(evt);
            }
        });

        autoroutesCheckBox.setFont(new java.awt.Font("Segoe UI Light", 1, 14)); // NOI18N
        autoroutesCheckBox.setText("Autoroutes");
        autoroutesCheckBox.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        autoroutesCheckBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                autoroutesCheckBoxActionPerformed(evt);
            }
        });

        natioCheckBox.setFont(new java.awt.Font("Segoe UI Light", 1, 14)); // NOI18N
        natioCheckBox.setText("Routes nationales");
        natioCheckBox.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        natioCheckBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                natioCheckBoxActionPerformed(evt);
            }
        });

        depCheckBox.setFont(new java.awt.Font("Segoe UI Light", 1, 14)); // NOI18N
        depCheckBox.setText("Routes départementales");
        depCheckBox.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        depCheckBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                depCheckBoxActionPerformed(evt);
            }
        });

        titreNoeudEcran0.setFont(new java.awt.Font("Segoe UI Light", 0, 14)); // NOI18N
        titreNoeudEcran0.setText("NOEUDS");

        titreLienEcran0.setFont(new java.awt.Font("Segoe UI Light", 0, 14)); // NOI18N
        titreLienEcran0.setText("LIENS");

        listerBouton.setFont(new java.awt.Font("Segoe UI Light", 1, 14)); // NOI18N
        listerBouton.setText("Liste des éléments");
        listerBouton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                listerBoutonActionPerformed(evt);
            }
        });

        titreNombreEcran0.setFont(new java.awt.Font("Segoe UI Light", 0, 14)); // NOI18N
        titreNombreEcran0.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        titreNombreEcran0.setText("Nombres d'éléments:");
        titreNombreEcran0.setFocusable(false);
        titreNombreEcran0.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);

        nombreComboBox.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        nombreComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Aucun", "Villes", "Restaurants", "Centres de loisir", "Tous les lieux", "Autoroutes", "Routes nationales", "Routes départementales", "Toutes les routes" }));
        nombreComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nombreComboBoxActionPerformed(evt);
            }
        });

        infoNombreEcran0.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        infoNombreEcran0.setText("Nombres: ");

        titreEcran0.setFont(new java.awt.Font("Segoe UI Black", 0, 24)); // NOI18N
        titreEcran0.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        titreEcran0.setText("Filtre");

        nombreEcran0.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N

        javax.swing.GroupLayout ecran0PanelLayout = new javax.swing.GroupLayout(ecran0Panel);
        ecran0Panel.setLayout(ecran0PanelLayout);
        ecran0PanelLayout.setHorizontalGroup(
            ecran0PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ecran0PanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(ecran0PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(retour0Bouton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(nombreComboBox, 0, 0, Short.MAX_VALUE)
                    .addComponent(titreNoeudEcran0, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(listerBouton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(ecran0PanelLayout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(titreLienEcran0, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(titreNombreEcran0, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, ecran0PanelLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(ecran0PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(depCheckBox, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(natioCheckBox, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(loisirCheckBox, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(restoCheckBox, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(villesCheckBox, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(autoroutesCheckBox, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(ecran0PanelLayout.createSequentialGroup()
                        .addComponent(infoNombreEcran0)
                        .addGap(18, 18, 18)
                        .addComponent(nombreEcran0, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(titreEcran0, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        ecran0PanelLayout.setVerticalGroup(
            ecran0PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, ecran0PanelLayout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addComponent(titreEcran0)
                .addGap(30, 30, 30)
                .addComponent(titreNoeudEcran0)
                .addGap(10, 10, 10)
                .addComponent(villesCheckBox)
                .addGap(20, 20, 20)
                .addComponent(restoCheckBox)
                .addGap(20, 20, 20)
                .addComponent(loisirCheckBox)
                .addGap(20, 20, 20)
                .addComponent(titreLienEcran0)
                .addGap(10, 10, 10)
                .addComponent(autoroutesCheckBox)
                .addGap(20, 20, 20)
                .addComponent(natioCheckBox)
                .addGap(20, 20, 20)
                .addComponent(depCheckBox)
                .addGap(30, 30, 30)
                .addComponent(listerBouton, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30)
                .addComponent(titreNombreEcran0)
                .addGap(20, 20, 20)
                .addComponent(nombreComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(20, 20, 20)
                .addGroup(ecran0PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(infoNombreEcran0)
                    .addComponent(nombreEcran0))
                .addGap(30, 30, 30)
                .addComponent(retour0Bouton, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        menuPanel.add(ecran0Panel, "card0");

        ecran1Panel.setPreferredSize(new java.awt.Dimension(221, 775));

        retour1Bouton.setFont(new java.awt.Font("Segoe UI Light", 1, 18)); // NOI18N
        retour1Bouton.setText("Retour");
        retour1Bouton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                retour1BoutonActionPerformed(evt);
            }
        });

        titre1Distance.setFont(new java.awt.Font("Segoe UI Black", 0, 24)); // NOI18N
        titre1Distance.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        titre1Distance.setText("<html>Voisins et <br>extrémités<html>");

        titreNoeudSelectedLabel.setFont(new java.awt.Font("Segoe UI Historic", 1, 14)); // NOI18N
        titreNoeudSelectedLabel.setText("Noeud séléctionné:");

        titreLienSelectedLabel.setFont(new java.awt.Font("Segoe UI Historic", 1, 14)); // NOI18N
        titreLienSelectedLabel.setText("Lien séléctionné:");

        typeNoeudComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Tous", "Villes", "Restaurants", "Centres de loisir" }));
        typeNoeudComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                typeNoeudComboBoxActionPerformed(evt);
            }
        });

        noeudSelectedLabel.setFont(new java.awt.Font("Segoe UI Light", 0, 14)); // NOI18N
        noeudSelectedLabel.setText("Aucun noeud sélectionné");

        lienSelectedLabel.setFont(new java.awt.Font("Segoe UI Light", 0, 14)); // NOI18N
        lienSelectedLabel.setText("Aucun lien sélectionné:");

        voisinsTextArea.setEditable(false);
        voisinsTextArea.setColumns(20);
        voisinsTextArea.setFont(new java.awt.Font("Segoe UI Light", 0, 14)); // NOI18N
        voisinsTextArea.setLineWrap(true);
        voisinsTextArea.setRows(5);
        voisinsTextArea.setWrapStyleWord(true);
        jScrollPane1.setViewportView(voisinsTextArea);

        titreTypeNoeudLabel.setFont(new java.awt.Font("Segoe UI Historic", 0, 14)); // NOI18N
        titreTypeNoeudLabel.setText("Type de noeud voisins:");

        titreDepartLienSelectedLabel.setFont(new java.awt.Font("Segoe UI Semibold", 0, 12)); // NOI18N
        titreDepartLienSelectedLabel.setText("Noeud de départ:");

        titreArriveeLienSelectedLabel.setFont(new java.awt.Font("Segoe UI Semibold", 0, 12)); // NOI18N
        titreArriveeLienSelectedLabel.setText("Noeud d'arrivée:");

        departLienSelectedLabel.setFont(new java.awt.Font("Segoe UI Light", 0, 14)); // NOI18N
        departLienSelectedLabel.setText("...");

        arriveeLienSelectedLabel.setFont(new java.awt.Font("Segoe UI Light", 0, 14)); // NOI18N
        arriveeLienSelectedLabel.setText("...");

        javax.swing.GroupLayout ecran1PanelLayout = new javax.swing.GroupLayout(ecran1Panel);
        ecran1Panel.setLayout(ecran1PanelLayout);
        ecran1PanelLayout.setHorizontalGroup(
            ecran1PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ecran1PanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(ecran1PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(retour1Bouton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(titre1Distance)
                    .addComponent(titreNoeudSelectedLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(typeNoeudComboBox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(ecran1PanelLayout.createSequentialGroup()
                        .addGroup(ecran1PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(titreLienSelectedLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(lienSelectedLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(noeudSelectedLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(titreTypeNoeudLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(titreDepartLienSelectedLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(titreArriveeLienSelectedLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(departLienSelectedLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(arriveeLienSelectedLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(0, 43, Short.MAX_VALUE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addContainerGap())
        );
        ecran1PanelLayout.setVerticalGroup(
            ecran1PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, ecran1PanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(titre1Distance, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(20, 20, 20)
                .addComponent(titreNoeudSelectedLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(noeudSelectedLabel)
                .addGap(10, 10, 10)
                .addComponent(titreTypeNoeudLabel)
                .addGap(10, 10, 10)
                .addComponent(typeNoeudComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 182, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(40, 40, 40)
                .addComponent(titreLienSelectedLabel)
                .addGap(18, 18, 18)
                .addComponent(lienSelectedLabel)
                .addGap(18, 18, 18)
                .addComponent(titreDepartLienSelectedLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(departLienSelectedLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(titreArriveeLienSelectedLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(arriveeLienSelectedLabel)
                .addGap(30, 30, 30)
                .addComponent(retour1Bouton, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        menuPanel.add(ecran1Panel, "card1");

        ecran2Panel.setPreferredSize(new java.awt.Dimension(221, 775));

        retour2Bouton.setFont(new java.awt.Font("Segoe UI Light", 1, 18)); // NOI18N
        retour2Bouton.setText("Retour");
        retour2Bouton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                retour2BoutonActionPerformed(evt);
            }
        });

        titre2Distance.setFont(new java.awt.Font("Segoe UI Black", 0, 24)); // NOI18N
        titre2Distance.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        titre2Distance.setText("2 - Distance");

        titrePremierNoeudSelectedLabel1.setFont(new java.awt.Font("Segoe UI Historic", 1, 14)); // NOI18N
        titrePremierNoeudSelectedLabel1.setText("Premier noeud sélectionné:");

        premierNoeudSelectedLabel1.setFont(new java.awt.Font("Segoe UI Light", 0, 14)); // NOI18N
        premierNoeudSelectedLabel1.setText("Aucun noeud sélectionné");

        selectPremierNoeudBouton1.setFont(new java.awt.Font("Segoe UI Light", 1, 16)); // NOI18N
        selectPremierNoeudBouton1.setText("Choisir Premier Noeud");
        selectPremierNoeudBouton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                selectPremierNoeudBouton1ActionPerformed(evt);
            }
        });

        titreDeuxiemeNoeudSelectedLabel.setFont(new java.awt.Font("Segoe UI Historic", 1, 14)); // NOI18N
        titreDeuxiemeNoeudSelectedLabel.setText("Deuxième noeud sélectionné:");

        deuxiemeNoeudSelectedLabel1.setFont(new java.awt.Font("Segoe UI Light", 0, 14)); // NOI18N
        deuxiemeNoeudSelectedLabel1.setText("Aucun noeud sélectionné");

        selectDeuxiemeNoeudBouton1.setFont(new java.awt.Font("Segoe UI Light", 1, 16)); // NOI18N
        selectDeuxiemeNoeudBouton1.setText("Choisir Deuxième Noeud");
        selectDeuxiemeNoeudBouton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                selectDeuxiemeNoeudBouton1ActionPerformed(evt);
            }
        });

        titreResultatLabel.setFont(new java.awt.Font("Segoe UI Historic", 1, 18)); // NOI18N
        titreResultatLabel.setText("Résultat:");

        resultatLabel.setFont(new java.awt.Font("Segoe UI Light", 0, 14)); // NOI18N
        resultatLabel.setText("...");

        javax.swing.GroupLayout ecran2PanelLayout = new javax.swing.GroupLayout(ecran2Panel);
        ecran2Panel.setLayout(ecran2PanelLayout);
        ecran2PanelLayout.setHorizontalGroup(
            ecran2PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ecran2PanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(ecran2PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(titreResultatLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(titre2Distance, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(titrePremierNoeudSelectedLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(premierNoeudSelectedLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(selectPremierNoeudBouton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(selectDeuxiemeNoeudBouton1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(titreDeuxiemeNoeudSelectedLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(deuxiemeNoeudSelectedLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(resultatLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(retour2Bouton, javax.swing.GroupLayout.DEFAULT_SIZE, 197, Short.MAX_VALUE))
                .addContainerGap())
        );
        ecran2PanelLayout.setVerticalGroup(
            ecran2PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, ecran2PanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(titre2Distance)
                .addGap(50, 50, 50)
                .addComponent(titrePremierNoeudSelectedLabel1)
                .addGap(10, 10, 10)
                .addComponent(premierNoeudSelectedLabel1)
                .addGap(18, 18, 18)
                .addComponent(selectPremierNoeudBouton1, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(60, 60, 60)
                .addComponent(titreDeuxiemeNoeudSelectedLabel)
                .addGap(10, 10, 10)
                .addComponent(deuxiemeNoeudSelectedLabel1)
                .addGap(18, 18, 18)
                .addComponent(selectDeuxiemeNoeudBouton1, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(60, 60, 60)
                .addComponent(titreResultatLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(resultatLabel)
                .addGap(120, 120, 120)
                .addComponent(retour2Bouton, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(38, 38, 38))
        );

        menuPanel.add(ecran2Panel, "card2");

        ecran3Panel.setPreferredSize(new java.awt.Dimension(221, 775));

        retour3Bouton.setFont(new java.awt.Font("Segoe UI Light", 1, 18)); // NOI18N
        retour3Bouton.setText("Retour");
        retour3Bouton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                retour3BoutonActionPerformed(evt);
            }
        });

        selectDeuxiemeNoeudBouton2.setFont(new java.awt.Font("Segoe UI Light", 1, 16)); // NOI18N
        selectDeuxiemeNoeudBouton2.setText("Choisir Deuxième Noeud");
        selectDeuxiemeNoeudBouton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                selectDeuxiemeNoeudBouton2ActionPerformed(evt);
            }
        });

        deuxiemeNoeudSelectedLabel2.setFont(new java.awt.Font("Segoe UI Light", 0, 14)); // NOI18N
        deuxiemeNoeudSelectedLabel2.setText("Aucun noeud sélectionné");

        titreDeuxiemeNoeudSelectedLabel2.setFont(new java.awt.Font("Segoe UI Historic", 1, 14)); // NOI18N
        titreDeuxiemeNoeudSelectedLabel2.setText("Deuxième noeud sélectionné:");

        selectPremierNoeudBouton2.setFont(new java.awt.Font("Segoe UI Light", 1, 16)); // NOI18N
        selectPremierNoeudBouton2.setText("Choisir Premier Noeud");
        selectPremierNoeudBouton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                selectPremierNoeudBouton2ActionPerformed(evt);
            }
        });

        titrePremierNoeudSelectedLabel2.setFont(new java.awt.Font("Segoe UI Historic", 1, 14)); // NOI18N
        titrePremierNoeudSelectedLabel2.setText("Premier noeud sélectionné:");

        premierNoeudSelectedLabel2.setFont(new java.awt.Font("Segoe UI Light", 0, 14)); // NOI18N
        premierNoeudSelectedLabel2.setText("Aucun noeud sélectionné");

        titrePlus2Distance.setFont(new java.awt.Font("Segoe UI Black", 0, 24)); // NOI18N
        titrePlus2Distance.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        titrePlus2Distance.setText("Comparaison");

        titreOuvertLabel.setFont(new java.awt.Font("Segoe UI Historic", 1, 14)); // NOI18N
        titreOuvertLabel.setText("Le plus OUVERT:");

        titreGastroLabel.setFont(new java.awt.Font("Segoe UI Historic", 1, 14)); // NOI18N
        titreGastroLabel.setText("La plus GASTRONOMIQUE:");

        titreCulturelLabel.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        titreCulturelLabel.setText("Le plus CULTUREL:");

        resultatOuvertLabel.setFont(new java.awt.Font("Segoe UI Light", 0, 14)); // NOI18N
        resultatOuvertLabel.setText("...");

        resultatGastroLabel.setFont(new java.awt.Font("Segoe UI Light", 0, 14)); // NOI18N
        resultatGastroLabel.setText("...");

        resultatCulturelLabel.setFont(new java.awt.Font("Segoe UI Light", 0, 14)); // NOI18N
        resultatCulturelLabel.setText("...");

        javax.swing.GroupLayout ecran3PanelLayout = new javax.swing.GroupLayout(ecran3Panel);
        ecran3Panel.setLayout(ecran3PanelLayout);
        ecran3PanelLayout.setHorizontalGroup(
            ecran3PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ecran3PanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(ecran3PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(titrePlus2Distance, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(titrePremierNoeudSelectedLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(premierNoeudSelectedLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(selectPremierNoeudBouton2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(selectDeuxiemeNoeudBouton2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(titreDeuxiemeNoeudSelectedLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(deuxiemeNoeudSelectedLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(resultatCulturelLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(titreCulturelLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(titreGastroLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(titreOuvertLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(resultatOuvertLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(resultatGastroLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(retour3Bouton, javax.swing.GroupLayout.DEFAULT_SIZE, 197, Short.MAX_VALUE))
                .addContainerGap())
        );
        ecran3PanelLayout.setVerticalGroup(
            ecran3PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, ecran3PanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(titrePlus2Distance)
                .addGap(50, 50, 50)
                .addComponent(titrePremierNoeudSelectedLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(premierNoeudSelectedLabel2)
                .addGap(18, 18, 18)
                .addComponent(selectPremierNoeudBouton2, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(60, 60, 60)
                .addComponent(titreDeuxiemeNoeudSelectedLabel2)
                .addGap(18, 18, 18)
                .addComponent(deuxiemeNoeudSelectedLabel2)
                .addGap(18, 18, 18)
                .addComponent(selectDeuxiemeNoeudBouton2, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(20, 20, 20)
                .addComponent(titreOuvertLabel)
                .addGap(10, 10, 10)
                .addComponent(resultatOuvertLabel)
                .addGap(20, 20, 20)
                .addComponent(titreGastroLabel)
                .addGap(10, 10, 10)
                .addComponent(resultatGastroLabel)
                .addGap(20, 20, 20)
                .addComponent(titreCulturelLabel)
                .addGap(10, 10, 10)
                .addComponent(resultatCulturelLabel)
                .addGap(30, 30, 30)
                .addComponent(retour3Bouton, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        menuPanel.add(ecran3Panel, "card3");

        ecran4Panel.setPreferredSize(new java.awt.Dimension(221, 775));

        retour4Bouton.setFont(new java.awt.Font("Segoe UI Light", 1, 18)); // NOI18N
        retour4Bouton.setText("Retour");
        retour4Bouton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                retour4BoutonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout ecran4PanelLayout = new javax.swing.GroupLayout(ecran4Panel);
        ecran4Panel.setLayout(ecran4PanelLayout);
        ecran4PanelLayout.setHorizontalGroup(
            ecran4PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ecran4PanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(retour4Bouton, javax.swing.GroupLayout.DEFAULT_SIZE, 197, Short.MAX_VALUE)
                .addContainerGap())
        );
        ecran4PanelLayout.setVerticalGroup(
            ecran4PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, ecran4PanelLayout.createSequentialGroup()
                .addGap(650, 650, 650)
                .addComponent(retour4Bouton, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        menuPanel.add(ecran4Panel, "card4");

        mapPanel.setLayout(new javax.swing.BoxLayout(mapPanel, javax.swing.BoxLayout.PAGE_AXIS));

        mapGraphe.setMaximumSize(new java.awt.Dimension(2000, 1000));
        mapGraphe.setPreferredSize(new java.awt.Dimension(1000, 740));
        mapGraphe.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                mapGrapheMouseClicked(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                mapGrapheMouseReleased(evt);
            }
        });

        javax.swing.GroupLayout mapGrapheLayout = new javax.swing.GroupLayout(mapGraphe);
        mapGraphe.setLayout(mapGrapheLayout);
        mapGrapheLayout.setHorizontalGroup(
            mapGrapheLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1132, Short.MAX_VALUE)
        );
        mapGrapheLayout.setVerticalGroup(
            mapGrapheLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 725, Short.MAX_VALUE)
        );

        mapPanel.add(mapGraphe);

        consolePanel.setBackground(new java.awt.Color(169, 169, 169));

        consoleLabel.setBackground(new java.awt.Color(169, 169, 169));
        consoleLabel.setFont(new java.awt.Font("Segoe UI Semibold", 0, 14)); // NOI18N
        consoleLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        consoleLabel.setText("Console:");

        jScrollPane4.setPreferredSize(new java.awt.Dimension(226, 30));

        consoleTextArea.setEditable(false);
        consoleTextArea.setColumns(20);
        consoleTextArea.setFont(new java.awt.Font("Segoe UI Light", 0, 14)); // NOI18N
        consoleTextArea.setRows(5);
        jScrollPane4.setViewportView(consoleTextArea);

        javax.swing.GroupLayout consolePanelLayout = new javax.swing.GroupLayout(consolePanel);
        consolePanel.setLayout(consolePanelLayout);
        consolePanelLayout.setHorizontalGroup(
            consolePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, consolePanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(consoleLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 1016, Short.MAX_VALUE))
        );
        consolePanelLayout.setVerticalGroup(
            consolePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(consolePanelLayout.createSequentialGroup()
                .addGroup(consolePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(consoleLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 0, Short.MAX_VALUE))
        );

        mapPanel.add(consolePanel);

        fichierMenu.setText("Fichier");

        ouvrirMenuItem.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_O, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        ouvrirMenuItem.setText("Ouvrir un Graphe");
        ouvrirMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ouvrirMenuItemActionPerformed(evt);
            }
        });
        fichierMenu.add(ouvrirMenuItem);

        renitialiserMenuItem.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_R, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        renitialiserMenuItem.setText("Rénitialiser le Graphe");
        renitialiserMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                renitialiserMenuItemActionPerformed(evt);
            }
        });
        renitialiserMenuItem.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                renitialiserMenuItemPropertyChange(evt);
            }
        });
        fichierMenu.add(renitialiserMenuItem);
        fichierMenu.add(jSeparator1);

        quitterMenuItem.setText("Quitter");
        quitterMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                quitterMenuItemActionPerformed(evt);
            }
        });
        fichierMenu.add(quitterMenuItem);

        menuBar.add(fichierMenu);

        affichageMenu.setText("Affichage");

        afficherMenuPanelCheckBox.setSelected(true);
        afficherMenuPanelCheckBox.setText("Afficher le menu");
        afficherMenuPanelCheckBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                afficherMenuPanelCheckBoxActionPerformed(evt);
            }
        });
        affichageMenu.add(afficherMenuPanelCheckBox);

        afficherConsoleCheckBox.setSelected(true);
        afficherConsoleCheckBox.setText("Afficher la console");
        afficherConsoleCheckBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                afficherConsoleCheckBoxActionPerformed(evt);
            }
        });
        affichageMenu.add(afficherConsoleCheckBox);

        menuBar.add(affichageMenu);

        rechercheMenu.setText("Recherche");

        rechercheNoeudMenuItem.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_N, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        rechercheNoeudMenuItem.setText("Rechercher un noeud");
        rechercheNoeudMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rechercheNoeudMenuItemActionPerformed(evt);
            }
        });
        rechercheMenu.add(rechercheNoeudMenuItem);
        rechercheMenu.add(jSeparator4);

        rechercheLienMenuItem.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_L, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        rechercheLienMenuItem.setText("Rechercher un lien");
        rechercheLienMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rechercheLienMenuItemActionPerformed(evt);
            }
        });
        rechercheMenu.add(rechercheLienMenuItem);

        menuBar.add(rechercheMenu);

        aideMenu.setText("Aide");

        aideMenuItem.setText("Afficher l'aide");
        aideMenuItem.setEnabled(false);
        aideMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                aideMenuItemActionPerformed(evt);
            }
        });
        aideMenu.add(aideMenuItem);
        aideMenu.add(jSeparator2);

        AProposMenuItem.setText("À propos");
        AProposMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AProposMenuItemActionPerformed(evt);
            }
        });
        aideMenu.add(AProposMenuItem);

        menuBar.add(aideMenu);

        setJMenuBar(menuBar);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(menuPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(mapPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(0, 0, 0))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(menuPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(mapPanel, javax.swing.GroupLayout.DEFAULT_SIZE, 755, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    
    /* === Implémentation événementielle des boutons de l'application === */
    /**
     * Affiche un JDialog montrant les informations de l'application
     * @param evt 
     */
    private void AProposMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AProposMenuItemActionPerformed
        ImageIcon icon = new ImageIcon("icon/GRAMA icon full2.png");
        
        aideOptionPane.showMessageDialog(this, """
                                               GRAMA - Graph Map Analysis
                                               Version 1.0
                                               Créateur: Steve PENNEC en G5S2B
                                               département informatique de l'IUT Lyon 1
                                               Année de sortie: 2022
                                               Application entièrement libre de droit.
                                               
                                               Cette application a été conçue dans le cadre
                                               de la SAÉ S2.01 - Développement d'application.
                                               Sa mise en place a été rendue possible 
                                               grâce à du sang et de la sueur 
                                               mais aussi grâce aux cours et à l'encadrement 
                                               de prodigieux professeurs, un grand remerciement à eux.
                                               
                                               Dédicace à Denis NGUYEN, 
                                               ancien binôme et ancien étudiant de l'IUT Lyon 1.""", "À propos", JOptionPane.INFORMATION_MESSAGE, icon);
    }//GEN-LAST:event_AProposMenuItemActionPerformed

    /**
     * Bascule le menu du graphe de l'écran principale vers l'écran "Filtre" {@link #ecran0Panel}
     * @param evt 
     */
    private void ecran0BoutonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ecran0BoutonActionPerformed
        CardLayout cl = (CardLayout)(menuPanel.getLayout());
        cl.show(menuPanel, "card0");
        
    }//GEN-LAST:event_ecran0BoutonActionPerformed

    /**
     * Fais revenir le menu du graphe vers le menu principale {@link #principalPanel}
     * @param evt 
     */
    private void retour0BoutonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_retour0BoutonActionPerformed
        CardLayout cl = (CardLayout)(menuPanel.getLayout());
        cl.show(menuPanel, "cardPrincipal");
    }//GEN-LAST:event_retour0BoutonActionPerformed

    /**
     * Bascule le menu du graphe de l'écran principale vers l'écran "Voisins et extrémités" {@link #ecran1Panel}
     * @param evt 
     */
    private void ecran1BoutonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ecran1BoutonActionPerformed
        CardLayout cl = (CardLayout)(menuPanel.getLayout());
        cl.show(menuPanel, "card1");
    }//GEN-LAST:event_ecran1BoutonActionPerformed

    /**
     * Bascule le menu du graphe de l'écran principale vers l'écran "2 - Distance" {@link #ecran2Panel}
     * @param evt 
     */
    private void ecran2BoutonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ecran2BoutonActionPerformed
        CardLayout cl = (CardLayout)(menuPanel.getLayout());
        cl.show(menuPanel, "card2");
    }//GEN-LAST:event_ecran2BoutonActionPerformed

    /**
     * Fais revenir le menu du graphe vers le menu principale {@link #principalPanel}
     * @param evt 
     */
    private void retour2BoutonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_retour2BoutonActionPerformed
        CardLayout cl = (CardLayout)(menuPanel.getLayout());
        cl.show(menuPanel, "cardPrincipal");
        selectionAnnule();
    }//GEN-LAST:event_retour2BoutonActionPerformed

    /**
     * Bascule le menu du graphe de l'écran principale vers l'écran "Comparaison" {@link #ecran3Panel}
     * @param evt 
     */
    private void ecran3BoutonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ecran3BoutonActionPerformed
        CardLayout cl = (CardLayout)(menuPanel.getLayout());
        cl.show(menuPanel, "card3");
    }//GEN-LAST:event_ecran3BoutonActionPerformed

    /**
     * Fais revenir le menu du graphe vers le menu principale {@link #principalPanel}
     * @param evt 
     */
    private void retour3BoutonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_retour3BoutonActionPerformed
        CardLayout cl = (CardLayout)(menuPanel.getLayout());
        cl.show(menuPanel, "cardPrincipal");
        selectionAnnule();
    }//GEN-LAST:event_retour3BoutonActionPerformed

    /**
     * Bascule le menu du graphe de l'écran principale vers l'écran "Chemins" {@link #ecran4Panel}
     * @param evt 
     */
    private void ecran4BoutonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ecran4BoutonActionPerformed
        CardLayout cl = (CardLayout)(menuPanel.getLayout());
        cl.show(menuPanel, "card4");
    }//GEN-LAST:event_ecran4BoutonActionPerformed

    /**
     * Fais revenir le menu du graphe vers le menu principale {@link #principalPanel}
     * @param evt 
     */
    private void retour4BoutonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_retour4BoutonActionPerformed
        CardLayout cl = (CardLayout)(menuPanel.getLayout());
        cl.show(menuPanel, "cardPrincipal");
    }//GEN-LAST:event_retour4BoutonActionPerformed

    /**
     * Permet de sélectionner et d'afficher seulement les noeuds de type Centre de loisirs
     * @param evt 
     */
    private void loisirCheckBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_loisirCheckBoxActionPerformed
        if (loisirCheckBox.isSelected()){
            mapGraphe.addTypeNoeud("L");
            mapPanel.repaint();
        }else{
            mapGraphe.removeTypeNoeud("L");
            mapPanel.repaint();
        }
    }//GEN-LAST:event_loisirCheckBoxActionPerformed

    /**
     * Permet de sélectionner et d'afficher seulement les noeuds de type Villes
     * @param evt 
     */
    private void villesCheckBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_villesCheckBoxActionPerformed
        if (villesCheckBox.isSelected()){
            mapGraphe.addTypeNoeud("V");
            mapPanel.repaint();
        }else{
            mapGraphe.removeTypeNoeud("V");
            mapPanel.repaint();
        }
    }//GEN-LAST:event_villesCheckBoxActionPerformed

    /**
     * Permet de sélectionner et d'afficher seulement les noeuds de type Restaurants
     * @param evt 
     */
    private void restoCheckBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_restoCheckBoxActionPerformed
        if (restoCheckBox.isSelected()){
            mapGraphe.addTypeNoeud("R");
            mapPanel.repaint();
        }else{
            mapGraphe.removeTypeNoeud("R");
            mapPanel.repaint();
        }
    }//GEN-LAST:event_restoCheckBoxActionPerformed

    /**
     * Permet de sélectionner le type de noeuds ou de liens dont on souhaite avoir le nombre
     * @param evt 
     */
    private void nombreComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nombreComboBoxActionPerformed
        String item = (String) nombreComboBox.getSelectedItem();
        nombreEcran0.setText(grama.getNombre(item));
    }//GEN-LAST:event_nombreComboBoxActionPerformed

    /**
     * Permet d'afficher la fenêtre servant à lister les noeuds ou les liens par catégorie
     * @param evt 
     */
    private void listerBoutonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_listerBoutonActionPerformed
        generateListeFrame();
    }//GEN-LAST:event_listerBoutonActionPerformed

    /**
     * Permet de sélectionner et d'afficher seulement les liens de type Autoroutes
     * @param evt 
     */
    private void autoroutesCheckBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_autoroutesCheckBoxActionPerformed
        if (autoroutesCheckBox.isSelected()){
            mapGraphe.addTypeLien("A");
            mapPanel.repaint();
        }else{
            mapGraphe.removeTypeLien("A");
            mapPanel.repaint();
        }
    }//GEN-LAST:event_autoroutesCheckBoxActionPerformed

    /**
     * Permet de sélectionner et d'afficher seulement les liens de type Routes Nationales
     * @param evt 
     */
    private void natioCheckBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_natioCheckBoxActionPerformed
        if (natioCheckBox.isSelected()){
            mapGraphe.addTypeLien("N");
            mapPanel.repaint();
        }else{
            mapGraphe.removeTypeLien("N");
            mapPanel.repaint();
        }
    }//GEN-LAST:event_natioCheckBoxActionPerformed

    /**
     * Permet de sélectionner et d'afficher seulement les liens de type Routes Départementales
     * @param evt 
     */
    private void depCheckBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_depCheckBoxActionPerformed
        if (depCheckBox.isSelected()){
            mapGraphe.addTypeLien("D");
            mapPanel.repaint();
        }else{
            mapGraphe.removeTypeLien("D");
            mapPanel.repaint();
        }
    }//GEN-LAST:event_depCheckBoxActionPerformed

    /**
     * Permet d'afficher la liste de liens de type Autoroutes dans le JFrame {@link #ListeFrame}
     * @param evt 
     */
    private void autoroutesRadioBoutonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_autoroutesRadioBoutonActionPerformed
        if (autoroutesRadioBouton.isSelected()){
            liensTextArea.setText("");
            liensTextArea.setText(grama.listerCategorie("A"));
        }
    }//GEN-LAST:event_autoroutesRadioBoutonActionPerformed

    /**
     * Permet d'afficher la liste de liens de type Routes Nationales dans le JFrame {@link #ListeFrame}
     * @param evt 
     */
    private void natioRadioBoutonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_natioRadioBoutonActionPerformed
        if (natioRadioBouton.isSelected()){
            liensTextArea.setText("");
            liensTextArea.setText(grama.listerCategorie("N"));
        }
    }//GEN-LAST:event_natioRadioBoutonActionPerformed

    /**
     * Permet d'afficher la liste de liens de type Routes Départementales dans le JFrame {@link #ListeFrame}
     * @param evt 
     */
    private void depRadioBoutonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_depRadioBoutonActionPerformed
        if (depRadioBouton.isSelected()){
            liensTextArea.setText("");
            liensTextArea.setText(grama.listerCategorie("D"));
        }
    }//GEN-LAST:event_depRadioBoutonActionPerformed

    /**
     * Permet d'afficher la liste de noeuds de type Centre de loisirs dans le JFrame {@link #ListeFrame}
     * @param evt 
     */
    private void loisirRadioBoutonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_loisirRadioBoutonActionPerformed
        if (loisirRadioBouton.isSelected()){
            noeudsTextArea.setText("");
            noeudsTextArea.setText(grama.listerCategorie("L"));
        }
    }//GEN-LAST:event_loisirRadioBoutonActionPerformed

    /**
     * Permet d'afficher la liste de noeuds de type Restaurants dans le JFrame {@link #ListeFrame}
     * @param evt 
     */
    private void resRadioBoutonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_resRadioBoutonActionPerformed
        if (resRadioBouton.isSelected()){
            noeudsTextArea.setText("");
            noeudsTextArea.setText(grama.listerCategorie("R"));
        }
    }//GEN-LAST:event_resRadioBoutonActionPerformed

    /**
     * Permet d'afficher la liste de noeuds de type Villes dans le JFrame {@link #ListeFrame}
     * @param evt 
     */
    private void villesRadioBoutonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_villesRadioBoutonActionPerformed
        if (villesRadioBouton.isSelected()){
            noeudsTextArea.setText("");
            noeudsTextArea.setText(grama.listerCategorie("V"));
        }
    }//GEN-LAST:event_villesRadioBoutonActionPerformed

    /**
     * Fais revenir le menu du graphe vers le menu principale {@link #principalPanel}
     * @param evt 
     */
    private void retour1BoutonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_retour1BoutonActionPerformed
        CardLayout cl = (CardLayout)(menuPanel.getLayout());
        cl.show(menuPanel, "cardPrincipal");
    }//GEN-LAST:event_retour1BoutonActionPerformed

    /**
     * Permet de clicker et de sélectionner un noeud ou un lien dans et de les utiliser dans le menu du graphe
     * @param evt 
     */
    private void mapGrapheMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_mapGrapheMouseClicked
        GraphNoeud noeud = mapGraphe.getSelectedNode();
        GraphLien lien = mapGraphe.getSelectedLink();
        
        //Lorsqu'un noeud est sélectionné
        if (noeud != null){
            noeudAffiche(noeud);
            
            if (attenteSelectionPremierNoeud){
                premierNoeud = mapGraphe.getSelectedNode();
                
                if (verifySameNoeud(premierNoeud, deuxiemeNoeud)){ //Pour éviter de sélectionner le même noeud
                    setTextPremierNoeud();
                }
                selectionPremierNoeud();
            }
            
            if (attenteSelectionDeuxiemeNoeud){
                deuxiemeNoeud = mapGraphe.getSelectedNode();
                
                if (verifySameNoeud(premierNoeud, deuxiemeNoeud)){
                    setTextDeuxiemeNoeud();
                }
                selectionDeuxiemeNoeud();
            }
        }
        
        //Lorsqu'un lien est sélectionné
        if (lien != null){
            lienSelectedLabel.setText(lien.getDonnees());
            departLienSelectedLabel.setText(lien.getNoeudDepart().toString());
            arriveeLienSelectedLabel.setText(lien.getNoeudArrivee().toString());
        }
    
        //Si deux noeuds ont été sélectionnés, on peut les comparer et savoir s'ils sont à deux distance
        if (!attenteSelectionDeuxiemeNoeud && !attenteSelectionPremierNoeud){
            afficher2Distance();
            afficherComparaison();
        }
    }//GEN-LAST:event_mapGrapheMouseClicked

    /**
     * Permet de sélectionner un premier noeud dans les menus {@link #ecran2Panel}
     * @param evt 
     */
    private void selectPremierNoeudBouton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_selectPremierNoeudBouton1ActionPerformed
        selectPremierNoeud();
        selectionPremierNoeud();
    }//GEN-LAST:event_selectPremierNoeudBouton1ActionPerformed

    /**
     * Permet de sélectionner un premier noeud dans le menu {@link #ecran2Panel}
     * @param evt 
     */
    private void selectPremierNoeudBouton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_selectPremierNoeudBouton2ActionPerformed
        selectPremierNoeud();
    }//GEN-LAST:event_selectPremierNoeudBouton2ActionPerformed

    /**
     * Même chose que l'action {@link #mapGrapheMouseClicked(java.awt.event.MouseEvent)} mais lorsque la souris est relachée après avoir été maintenue
     * @param evt 
     */
    private void mapGrapheMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_mapGrapheMouseReleased
        GraphNoeud noeud = mapGraphe.getSelectedNode();
        GraphLien lien = mapGraphe.getSelectedLink();
        
        if (noeud != null){
            noeudSelectedLabel.setText(noeud.toString());
            voisinsTextArea.setText(afficherListeVoisins(noeud));
        }
        
        if (lien != null){
            lienSelectedLabel.setText(lien.getDonnees());
            departLienSelectedLabel.setText(lien.getNoeudDepart().toString());
            arriveeLienSelectedLabel.setText(lien.getNoeudArrivee().toString());
        }
    }//GEN-LAST:event_mapGrapheMouseReleased

    /**
     * Permet de sélectionner un deuxième noeud dans le menu {@link #ecran3Panel}
     * @param evt 
     */
    private void selectDeuxiemeNoeudBouton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_selectDeuxiemeNoeudBouton1ActionPerformed
        selectDeuxiemeNoeud();
        selectionDeuxiemeNoeud();
    }//GEN-LAST:event_selectDeuxiemeNoeudBouton1ActionPerformed

    /**
     * Permet de sélectionner un deuxième noeud dans le menu {@link #ecran3Panel}
     * @param evt 
     */
    private void selectDeuxiemeNoeudBouton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_selectDeuxiemeNoeudBouton2ActionPerformed
        selectDeuxiemeNoeud();
        selectionDeuxiemeNoeud();
    }//GEN-LAST:event_selectDeuxiemeNoeudBouton2ActionPerformed

    /**
     * Désactive le bouton de rénitialisation si le graphe n'a pas été chargé
     * @param evt 
     */
    private void renitialiserMenuItemPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_renitialiserMenuItemPropertyChange
        graphNotinitialized();
    }//GEN-LAST:event_renitialiserMenuItemPropertyChange

    /**
     * Permet de quitter l'application
     * @param evt 
     */
    private void quitterMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_quitterMenuItemActionPerformed
        System.exit(0);
    }//GEN-LAST:event_quitterMenuItemActionPerformed

    /**
     * Permet de rénitialiser le graphe
     * @param evt 
     */
    private void renitialiserMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_renitialiserMenuItemActionPerformed
        resetGraphe();
    }//GEN-LAST:event_renitialiserMenuItemActionPerformed

    /**
     * Permet d'ouvrir un sélecteur de fichier pour ouvrir un graphe
     * @param evt 
     */
    private void ouvrirMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ouvrirMenuItemActionPerformed
        openFile();
    }//GEN-LAST:event_ouvrirMenuItemActionPerformed

    /**
     * Permet d'afficher les informations du noeud sélectionné lorsque qu'on change de type dans l'écran {@link #ecran0Panel}
     * @param evt 
     */
    private void typeNoeudComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_typeNoeudComboBoxActionPerformed
        noeudAffiche(mapGraphe.getSelectedNode());
    }//GEN-LAST:event_typeNoeudComboBoxActionPerformed

    /**
     * Affiche l'aide de l'application
     * @param evt 
     */
    private void aideMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_aideMenuItemActionPerformed
        
    }//GEN-LAST:event_aideMenuItemActionPerformed

    /**
     * Permet de quitter la {@link #ListeFrame}
     * @param evt 
     */
    private void exitFrameBoutonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitFrameBoutonActionPerformed
        ListeFrame.dispose();
    }//GEN-LAST:event_exitFrameBoutonActionPerformed

    /**
     * Permet d'afficher la console
     * @param evt 
     */
    private void afficherConsoleCheckBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_afficherConsoleCheckBoxActionPerformed
        if (afficherConsoleCheckBox.isSelected()){
            consolePanel.setVisible(true);
        } else{
            consolePanel.setVisible(false);
        }
    }//GEN-LAST:event_afficherConsoleCheckBoxActionPerformed

    /**
     * Permet d'afficher le menu du graphe
     * @param evt 
     */
    private void afficherMenuPanelCheckBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_afficherMenuPanelCheckBoxActionPerformed
        if (afficherMenuPanelCheckBox.isSelected()){
            menuPanel.setVisible(true);
        } else{
            menuPanel.setVisible(false);
        }
    }//GEN-LAST:event_afficherMenuPanelCheckBoxActionPerformed

    /**
     * Permet de rechercher un noeud en particulier et de le sélectionner
     * @param evt 
     */
    private void rechercheLienMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rechercheLienMenuItemActionPerformed
        GraphLien[] noeud = new GraphLien[mapGraphe.getListeGraphLien().size()];
//        mapGraphe.getListeGraphNoeud().sort((GraphNoeud o1, GraphNoeud o2) -> {
//            if(o1.getNomLieu().equals(o2.getNomLieu()))
//                return 0;
//            return (o1.getNomLieu().compareTo(o2.getNomLieu()));
//        });
//        Collections.sort(mapGraphe.getListeGraphNoeud(), new Comparator<GraphNoeud>(){
//            @Override
//            public int compare(GraphNoeud o1, GraphNoeud o2){
//                if(o1.getNomLieu().equals(o2.getNomLieu()))
//                    return 0;
//                return (o1.getNomLieu().compareTo(o2.getNomLieu()));
//                }
//        });
        
        mapGraphe.getListeGraphLien().toArray(noeud);

        JComboBox noeudComboBox = new JComboBox(noeud);
        noeudComboBox.setFont(new Font("Segoe UI Light", Font.PLAIN, 14));
        
        rechercheOptionPane.showMessageDialog(null, noeudComboBox, "Recherche d'un noeud", JOptionPane.PLAIN_MESSAGE);
        GraphLien retour = (GraphLien) noeudComboBox.getSelectedItem();
        mapGraphe.unselectAllLinks();
        retour.setSelected(true);
        mapPanel.repaint();
        lienSelectedLabel.setText(retour.getDonnees());
        departLienSelectedLabel.setText(retour.getNoeudDepart().toString());
        arriveeLienSelectedLabel.setText(retour.getNoeudArrivee().toString());
    }//GEN-LAST:event_rechercheLienMenuItemActionPerformed

    /**
     * Permet de rechercher un lien en particulier et de le sélectionner
     * @param evt 
     */
    private void rechercheNoeudMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rechercheNoeudMenuItemActionPerformed
        GraphNoeud[] noeud = new GraphNoeud[mapGraphe.getListeGraphNoeud().size()];  
        mapGraphe.getListeGraphNoeud().toArray(noeud);

        JComboBox noeudComboBox = new JComboBox(noeud);
        noeudComboBox.setFont(new Font("Segoe UI Light", Font.PLAIN, 14));
        
        rechercheOptionPane.showMessageDialog(null, noeudComboBox, "Recherche d'un noeud", JOptionPane.PLAIN_MESSAGE);
        GraphNoeud retour = (GraphNoeud) noeudComboBox.getSelectedItem();
        mapGraphe.unselectAllNodes();
        retour.setSelected(true);
        mapPanel.repaint();
        noeudAffiche(retour);
    }//GEN-LAST:event_rechercheNoeudMenuItemActionPerformed
 
    
    
    
    /* === Autres méthodes === */
        
    /**
     * Configure et génère le groupe de Radiobutton
     */
    private void generateListeFrame(){
        ListeFrame.setSize(1138, 800);
        ListeFrame.setLocationRelativeTo(null);
        ListeFrame.setVisible(true);
        
        noeudButtonGroup.add(villesRadioBouton);
        noeudButtonGroup.add(resRadioBouton);
        noeudButtonGroup.add(loisirRadioBouton);
        
        lienButtonGroup.add(depRadioBouton);
        lienButtonGroup.add(natioRadioBouton);
        lienButtonGroup.add(autoroutesRadioBouton);
    }
    
    /**
     * Renvoie la liste des voisins du noeud entré en paramètre selon le type choisi dans la ComboBox de type {@link #typeNoeudComboBox}
     * @param noeud Correspond au noeud sur laquelle on souhaite savoir ses voisins
     * @return Retourne la liste des voisins en String
     */
    private String afficherListeVoisins(GraphNoeud noeud){
        String listeVoisin = "";
        
        switch( (String) typeNoeudComboBox.getSelectedItem()){
            case "Tous":
                listeVoisin = noeud.afficherVoisins("");
                break;
                
            case "Villes":
                listeVoisin = noeud.afficherVoisins("V");
                break;
                
            case "Restaurants":
                listeVoisin = noeud.afficherVoisins("R");
                break;
                
            case "Centres de loisir":
                listeVoisin = noeud.afficherVoisins("L");
                break;
                
            default:
                break;
        }
        return listeVoisin;
    }
    
    
    /**
     * Gère l'affichage dans les panels {@link #ecran2Panel} {@link #ecran3Panel} et du graphe lorsqu'on souhaite sélectionner un premier noeud
     */
    private void selectPremierNoeud(){
        if (!attenteSelectionDeuxiemeNoeud){
            premierNoeudSelectedLabel1.setText("En attente de sélection...");
            premierNoeudSelectedLabel2.setText("En attente de sélection...");
            mapGraphe.unselectAllNodes();
            attenteSelectionPremierNoeud = true;
            mapPanel.repaint();
        }
    }
    
    /**
     * Idem que {@link #selectPremierNoeud()} mais pour la sélection d'un second noeud
     */
    private void selectDeuxiemeNoeud(){
        if (!attenteSelectionPremierNoeud){
            deuxiemeNoeudSelectedLabel1.setText("En attente de sélection...");
            deuxiemeNoeudSelectedLabel2.setText("En attente de sélection...");
            mapGraphe.unselectAllNodes();
            attenteSelectionDeuxiemeNoeud = true;
            mapPanel.repaint();
        }
    }
    
    /**
     * Permet d'écrire le noeud du premier noeud sélectionné sur le label correspondant
     */
    private void setTextPremierNoeud(){
        premierNoeudSelectedLabel1.setText(premierNoeud.toString());
        premierNoeudSelectedLabel2.setText(premierNoeud.toString());
        attenteSelectionPremierNoeud = false;
    }
    
    /**
     * Idem que {@link #setTextPremierNoeud()} mais pour la sélection d'un second noeud
     */
    private void setTextDeuxiemeNoeud(){
        deuxiemeNoeudSelectedLabel1.setText(deuxiemeNoeud.toString());
        deuxiemeNoeudSelectedLabel2.setText(deuxiemeNoeud.toString());
        attenteSelectionDeuxiemeNoeud = false;
    }
    
    /**
     * Vérifie que les deux noeuds sélectionnés sont différents, sinon elle affiche un message d'avertissement
     * @param noeud1 Correspond au premier noeud à comparer
     * @param noeud2 Correspond au second noeud à comparer
     * @return Retourne un boolean où false quand ils sont identiques, sinon true si différents.
     */
    private boolean verifySameNoeud(GraphNoeud noeud1, GraphNoeud noeud2){
        if (noeud1 != null && noeud2 != null && noeud1.equals(noeud2)){
            JOptionPane warning = new JOptionPane();
            warning.showMessageDialog(this, "Les noeuds sélectionnés doivent être différents", "Erreur", JOptionPane.WARNING_MESSAGE);
            return false;
        } 
        return true;
    }
    
    /**
     * Utilise la méthode {@link grama.deuxDistance()} pour savoir si les deux noeuds sélectionnés sont à deux distance et l'affiche dans le label de résultat
     */
    private void afficher2Distance(){
        if (premierNoeud  != null && deuxiemeNoeud != null){
            if (grama.deuxDistance(premierNoeud.noeud, deuxiemeNoeud.noeud))
                resultatLabel.setText("Ils sont à 2 distance.");
            else
                resultatLabel.setText("Ils ne sont pas à 2 distance.");  
        }
    }
    
    /**
     * Utilise la méthode {@link #grama.compareVilles()} afin de comparer deux sites et affiche le résultat dans les labels correspondants
     */
    private void afficherComparaison(){
        if (premierNoeud  != null && deuxiemeNoeud != null){
            boolean[] comparaison = grama.compareNoeuds(premierNoeud.noeud, deuxiemeNoeud.noeud);
            
            if (comparaison[0])
                resultatOuvertLabel.setText(premierNoeud.toString());
            else
                resultatOuvertLabel.setText(deuxiemeNoeud.toString());
            
            if (comparaison[1])
                resultatGastroLabel.setText(premierNoeud.toString());
            else
                resultatGastroLabel.setText(deuxiemeNoeud.toString());
           
            if (comparaison[2])
                resultatCulturelLabel.setText(premierNoeud.toString());
            else
                resultatCulturelLabel.setText(deuxiemeNoeud.toString());
        }
    }
    
    /**
     * Correspond à la méthode d'ouverture de fichier CSV ou txt pour charger un graphe.
     */
    private void openFile(){
        openFileChooser.setFileFilter(new FileNameExtensionFilter("Document texte (*.txt)", "txt"));
        openFileChooser.setFileFilter(new FileNameExtensionFilter("Fichier CSV (*.csv)", "csv"));
        int returnVal = openFileChooser.showOpenDialog(this);
            if (returnVal == JFileChooser.APPROVE_OPTION) {
                File file = openFileChooser.getSelectedFile();
                fichier = file.getAbsolutePath();
                resetGraphe();
                consoleTextArea.setText("Le graphe a été chargé avec succès.");
            }
    }
    
    /**
     * Rénitialise les données d'un graphe ainsi que la map {@link #mapPanel}
     */
    private void resetGraphe(){
        grama = new Graph();
        mapGraphe.reset();
        try {
            initGraph();
        } catch (IOException ex) {
            consoleTextArea.setText("Erreur: Le graphe n'a pas pu être chargé...");
        }
        mapPanel.repaint();
    }
    
    
    
    /**
     * Méthode main, lancant l'application et l'ouverture de la fenêtre principale
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(EcranPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(EcranPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(EcranPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(EcranPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new EcranPrincipal().setVisible(true);
                } catch (IOException ex) {
                    Logger.getLogger(EcranPrincipal.class.getName()).log(Level.SEVERE, null, ex);
                }
                }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuItem AProposMenuItem;
    private javax.swing.JFrame ListeFrame;
    private javax.swing.JOptionPane aProposOptionPane;
    private javax.swing.JMenu affichageMenu;
    private javax.swing.JCheckBoxMenuItem afficherConsoleCheckBox;
    private javax.swing.JCheckBoxMenuItem afficherMenuPanelCheckBox;
    private javax.swing.JMenu aideMenu;
    private javax.swing.JMenuItem aideMenuItem;
    private javax.swing.JOptionPane aideOptionPane;
    private javax.swing.JLabel arriveeLienSelectedLabel;
    private javax.swing.JCheckBox autoroutesCheckBox;
    private javax.swing.JRadioButton autoroutesRadioBouton;
    private javax.swing.JLabel comingSoonLabel;
    private javax.swing.JLabel consoleLabel;
    private javax.swing.JPanel consolePanel;
    private javax.swing.JTextArea consoleTextArea;
    private javax.swing.JCheckBox depCheckBox;
    private javax.swing.JRadioButton depRadioBouton;
    private javax.swing.JLabel departLienSelectedLabel;
    private javax.swing.JLabel deuxiemeNoeudSelectedLabel1;
    private javax.swing.JLabel deuxiemeNoeudSelectedLabel2;
    private javax.swing.JButton ecran0Bouton;
    private javax.swing.JPanel ecran0Panel;
    private javax.swing.JButton ecran1Bouton;
    private javax.swing.JPanel ecran1Panel;
    private javax.swing.JButton ecran2Bouton;
    private javax.swing.JPanel ecran2Panel;
    private javax.swing.JButton ecran3Bouton;
    private javax.swing.JPanel ecran3Panel;
    private javax.swing.JButton ecran4Bouton;
    private javax.swing.JPanel ecran4Panel;
    private javax.swing.JButton exitFrameBouton;
    private javax.swing.JMenu fichierMenu;
    private javax.swing.JLabel infoNombreEcran0;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JPopupMenu.Separator jSeparator1;
    private javax.swing.JPopupMenu.Separator jSeparator2;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JPopupMenu.Separator jSeparator4;
    private javax.swing.ButtonGroup lienButtonGroup;
    private javax.swing.JLabel lienSelectedLabel;
    private javax.swing.JTextArea liensTextArea;
    private javax.swing.JPanel listePanel;
    private javax.swing.JButton listerBouton;
    private javax.swing.JCheckBox loisirCheckBox;
    private javax.swing.JRadioButton loisirRadioBouton;
    private grama.map.Map mapGraphe;
    private javax.swing.JPanel mapPanel;
    private javax.swing.JMenuBar menuBar;
    private javax.swing.JPanel menuPanel;
    private javax.swing.JCheckBox natioCheckBox;
    private javax.swing.JRadioButton natioRadioBouton;
    private javax.swing.ButtonGroup noeudButtonGroup;
    private javax.swing.JLabel noeudSelectedLabel;
    private javax.swing.JTextArea noeudsTextArea;
    private javax.swing.JComboBox<String> nombreComboBox;
    private javax.swing.JLabel nombreEcran0;
    private javax.swing.JFileChooser openFileChooser;
    private javax.swing.JMenuItem ouvrirMenuItem;
    private javax.swing.JLabel premierNoeudSelectedLabel1;
    private javax.swing.JLabel premierNoeudSelectedLabel2;
    private javax.swing.JPanel principalPanel;
    private javax.swing.JMenuItem quitterMenuItem;
    private javax.swing.JMenuItem rechercheLienMenuItem;
    private javax.swing.JMenu rechercheMenu;
    private javax.swing.JMenuItem rechercheNoeudMenuItem;
    private javax.swing.JOptionPane rechercheOptionPane;
    private javax.swing.JMenuItem renitialiserMenuItem;
    private javax.swing.JRadioButton resRadioBouton;
    private javax.swing.JCheckBox restoCheckBox;
    private javax.swing.JLabel resultatCulturelLabel;
    private javax.swing.JLabel resultatGastroLabel;
    private javax.swing.JLabel resultatLabel;
    private javax.swing.JLabel resultatOuvertLabel;
    private javax.swing.JButton retour0Bouton;
    private javax.swing.JButton retour1Bouton;
    private javax.swing.JButton retour2Bouton;
    private javax.swing.JButton retour3Bouton;
    private javax.swing.JButton retour4Bouton;
    private javax.swing.JButton selectDeuxiemeNoeudBouton1;
    private javax.swing.JButton selectDeuxiemeNoeudBouton2;
    private javax.swing.JButton selectPremierNoeudBouton1;
    private javax.swing.JButton selectPremierNoeudBouton2;
    private javax.swing.JLabel titre1Distance;
    private javax.swing.JLabel titre2Distance;
    private javax.swing.JLabel titreArriveeLienSelectedLabel;
    private javax.swing.JLabel titreCulturelLabel;
    private javax.swing.JLabel titreDepartLienSelectedLabel;
    private javax.swing.JLabel titreDeuxiemeNoeudSelectedLabel;
    private javax.swing.JLabel titreDeuxiemeNoeudSelectedLabel2;
    private javax.swing.JLabel titreEcran0;
    private javax.swing.JLabel titreEcranPrincipal;
    private javax.swing.JLabel titreGastroLabel;
    private javax.swing.JLabel titreLienEcran0;
    private javax.swing.JLabel titreLienSelectedLabel;
    private javax.swing.JLabel titreListeLien;
    private javax.swing.JLabel titreListeNoeud;
    private javax.swing.JLabel titreListePanel;
    private javax.swing.JLabel titreNoeudEcran0;
    private javax.swing.JLabel titreNoeudSelectedLabel;
    private javax.swing.JLabel titreNombreEcran0;
    private javax.swing.JLabel titreOuvertLabel;
    private javax.swing.JLabel titrePlus2Distance;
    private javax.swing.JLabel titrePremierNoeudSelectedLabel1;
    private javax.swing.JLabel titrePremierNoeudSelectedLabel2;
    private javax.swing.JLabel titreResultatLabel;
    private javax.swing.JLabel titreTypeNoeudLabel;
    private javax.swing.JComboBox<String> typeNoeudComboBox;
    private javax.swing.JCheckBox villesCheckBox;
    private javax.swing.JRadioButton villesRadioBouton;
    private javax.swing.JTextArea voisinsTextArea;
    // End of variables declaration//GEN-END:variables

    /*** === Autres déclarations === ***/
    /**
     * Correspond au premier noeud sélectionné
     */
    private GraphNoeud premierNoeud;
    
    /**
     * Correspond au second noeud sélectionné
     */
    private GraphNoeud deuxiemeNoeud;
    
    /**
     * Correspond à un boolean permettant de savoir si le premier noeud est en attente de sélection
     */
    private boolean attenteSelectionPremierNoeud;
    
    /**
     * Correspond à un boolean permettant de savoir si le deuxième noeud est en attente de sélection
     */
    private boolean attenteSelectionDeuxiemeNoeud;

    
    /* === Méthode de ecranListener === */
    
    /**
     * Modifie les labels affichant les informations du noeud en paramètre
     * @param noeud étant le noeud à afficher
     */
    @Override
    public void noeudAffiche(GraphNoeud noeud) {
        noeudSelectedLabel.setText(noeud.toString());
        voisinsTextArea.setText(afficherListeVoisins(noeud));
    }

    /**
     * Modifie l'activation du bouton de sélection du deuxième noeud selon l'état de sélection du premier
     */
    @Override
    public void selectionPremierNoeud() {
        selectDeuxiemeNoeudBouton1.setEnabled(!attenteSelectionPremierNoeud);
        selectDeuxiemeNoeudBouton2.setEnabled(!attenteSelectionPremierNoeud);
    }

    /**
     * Idem que le précedent {@link #selectionPremierNoeud() mais pour le bouton du premier}
     */
    @Override
    public void selectionDeuxiemeNoeud() {
        selectPremierNoeudBouton1.setEnabled(!attenteSelectionDeuxiemeNoeud);
        selectPremierNoeudBouton2.setEnabled(!attenteSelectionDeuxiemeNoeud);
    }

    /**
     * Gère l'activation de la fonction de rénitialisation
     */
    @Override
    public void graphNotinitialized() {
        renitialiserMenuItem.setEnabled(grama != null);
    }

    /**
     * Permet d'annuler la sélection d'un noeud lorsque que l'on quitte un des panels de sélection {@link #ecran2Panel} {@link #ecran3Panel}
     */
    @Override
    public void selectionAnnule() {
        if (attenteSelectionPremierNoeud){
            premierNoeudSelectedLabel1.setText("Aucun noeud sélectionné");
            premierNoeudSelectedLabel2.setText("Aucun noeud sélectionné");
            attenteSelectionPremierNoeud = false;
            selectionPremierNoeud();
        } else if (attenteSelectionDeuxiemeNoeud){
            deuxiemeNoeudSelectedLabel1.setText("Aucun noeud sélectionné");
            deuxiemeNoeudSelectedLabel2.setText("Aucun noeud sélectionné");
            attenteSelectionDeuxiemeNoeud = false;
            selectionDeuxiemeNoeud();
        }
    }
}
